% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/progress.R
\name{create_redis_progress}
\alias{create_redis_progress}
\title{Create redis progress bar}
\usage{
create_redis_progress(name, redis = NULL, publish = NULL, debug = FALSE,
  unique.name = FALSE, append = TRUE, verbose = TRUE)
}
\arguments{
\item{name}{character string used to create the queue name (with predefined prefix).}

\item{redis}{redis_client object used to hold connexion parameters}

\item{publish}{name of a redis key to use to publish the generated queue name (caution, no namespace)}

\item{debug}{print debug information}

\item{unique.name}{ensure queue has unique name, add a random generated string (useful with publish)}

\item{append}{queue name (fully qualified) already exists, it will be reused}

\item{verbose}{show information message}
}
\description{
Create redis progress bar
}
\section{publish}{

Publish argument allows to set the current queue name into another redis entry.
publish should be the key name to use.
If the passed value has an attribute "type" it is used to determine the type of operation to do with the key
\describe{
 \item{key}{uses SET operation}
 \item{list}{uses LPUSH so the queue name will be pushed to the tail of the list named by the provided key}
}
}

\section{queue name}{

The queue name will be used to create an Hash set structure in Redis. To avoid collision between progress bars, 2 mechanisms
are used :
\itemize{
 \item{passing unique.name=TRUE will add a unique suffix to the queue name, ensuring uniqueness of the queue name.
   Previous progress bar with the same name will be deleted unless \code{append} parameter is TRUE
 }
 \item{Provided name is prefixed using redis_queue_name function, ensuring a dedicated keyspace for progress bar. the prefix string can be configured
 in R options. It is defined once in the session of the creator of the progress bar instance. So it has only to be defined in the R instance
 creating the jobs. If R instances are created independently and the progress object is not propagated you have to be sure the same
 prefix is used.
 }
}
}

