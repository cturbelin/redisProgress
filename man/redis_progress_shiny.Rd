% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/app.R
\name{redis_progress_shiny}
\alias{redis_progress_shiny}
\title{Monitor tasks using a shiny application}
\usage{
redis_progress_shiny(from, redis, debug = FALSE, options = list())
}
\arguments{
\item{from}{source of the queue to monitor, simplest is the queue name (without the queue prefix)}

\item{redis}{redis client definition object, returned by \code{redis_client()}}

\item{debug}{show verbose information message if TRUE (for development)}

\item{options}{list (see section options)}
}
\description{
This function provides a minimal console based interface to follow the progression of tasks in a queue
One 'queue' can follows an arbitrary number of tasks run in parallel.
}
\section{Options}{

\describe{
\item{use.bar}{use progress bar}
\item{bar.size}{size of the progress bar (number of chars)}
\item{steps}{number of steps of all the tasks (if always the same and not provided by each task)}
\item{ncol}{number of columns to use to show the tasks progress}
\item{sleep}{number of seconds to sleep between update}
\item{log.size}{number of log messages to show (only lasts)}
}
}

\section{from Parameter}{

from parameter can be either a single character value,
\describe{
  \item{key}{redis key where the current queue name is stored in case of publish strategy}
}
}

\examples{
\dontrun{
# Follow the progress of the queue named "queue1"
redis_progress_monitor("queue1")

# Following tasks published in a list
redis_progress_monitor(list(key="myqueues"))

# Using progress bar and show only the 10 last log messages
redis_progress_monitor(from=queue1, options=list(use.bar=TRUE, log.size=10))
}

}
